<?php

/**
 * @file
 * Contains ZarizBranchMergeTestCase
 */

class ZarizStaticPagesListTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Pages list',
      'description' => 'Test the API for getting pages list form a snapshot.',
      'group' => 'Zariz Static',
    );
  }

  function setUp() {
    parent::setUp('zariz', 'zariz_static');
    $og_field = og_fields_info(OG_AUDIENCE_FIELD);
    $og_field['field']['cardinality'] = 1;
    og_create_field('field_branch', 'node', 'article', $og_field);
  }

  /**
   * Test the API for getting pages list form a snapshot.
   */
  function testPageList() {
    $live_node = zariz_create_branch('live');
    $dev_node = zariz_create_branch('dev', $live_node);

    // Add a group content.
    $values = array(
      'type' => 'article',
      'title' => $this->randomName(),
    );
    $values['field_branch'][LANGUAGE_NONE][0]['target_id'] = $live_node->nid;
    $node1 = $this->drupalCreateNode($values);

    $values['title'] = $this->randomName();
    $node2 = $this->drupalCreateNode($values);

    $values['title'] = $this->randomName();
    $values['field_branch'][LANGUAGE_NONE][0]['target_id'] = $dev_node->nid;
    $node3 = $this->drupalCreateNode($values);

    $live_snapshot = zariz_get_snapshot_from_branch($live_node->nid);
    $expected_result = array(
      'insert' => array(
        'index.php',
        'node/' . $node1->nid,
        'node/' . $node2->nid,
      ),
      'delete' => array(),
    );

    $result = zariz_static_get_page_list_by_snapshot($live_snapshot->sid);
    $this->assertEqual($expected_result, $result);

    // Merge branch.
    zariz_merge_branch($dev_node->nid);

    // Assert only incremental changes are returned, along with the home page.
    $live_snapshot = zariz_get_snapshot_from_branch($live_node->nid);
    $last_nid = $live_snapshot->field_last_node[LANGUAGE_NONE][0]['target_id'];

    $expected_result = array(
      'insert' => array(
        'index.php',
        'node/' . $last_nid,
      ),
      'delete' => array(),
    );

    $result = zariz_static_get_page_list_by_snapshot($live_snapshot->sid);
    $this->assertEqual($expected_result, $result);
  }
}
